version: "3"
services:
  traefik:
    image: traefik:2.2
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - sashnevskiy
    ports:
      - 80:80

  database:
    image: postgres:alpine
    restart: always
    hostname: database

    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "games", "-U", "postgres" ]
      timeout: 5s
      interval: 10s
      retries: 10

    ports:
      #- "5433:5432"
      - "5432:5432"

    labels:
      - traefik.enable=false

    networks:
      - sashnevskiy

    environment: 
      - "POSTGRES_PASSWORD=mysecretpassword"
      - "POSTGRES_DB=games"
      - "POSTGRES_USER=postgres"

    volumes:
      - "./match_prediction/init-sql:/docker-entrypoint-initdb.d"

  web:
    restart: always
    build: .

    hostname: "web"
    environment:
      - API_TOKEN=
    networks:
      - sashnevskiy

    expose:
      - 5005

    labels:
      - traefik.enable=true
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.routers.web.rule=Host(`match-prediction.localhost`)

    depends_on:
      database:
        condition: service_healthy

networks:
  sashnevskiy:
    name: sashnevskiy
    driver: bridge